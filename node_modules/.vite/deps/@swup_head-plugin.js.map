{
  "version": 3,
  "sources": ["../../@swup/plugin/src/versionSatisfies.ts", "../../@swup/plugin/src/index.ts", "../../@swup/plugin/src/pluginRequirements.ts", "../../@swup/head-plugin/src/mergeHeadContents.ts", "../../@swup/head-plugin/src/waitForAssets.ts", "../../@swup/head-plugin/src/index.ts", "../../@swup/head-plugin/src/updateLangAttribute.ts", "../../@swup/head-plugin/src/waitForStylesheet.ts"],
  "sourcesContent": ["type Comparator = '>' | '>=' | '<' | '<=';\n\n// Fill versions to exactly 3 decimals\nexport const normalizeVersion = (version: string): string => {\n\treturn String(version)\n\t\t.split('.')\n\t\t.map(segment => String(parseInt(segment || '0', 10)))\n\t\t.concat(['0', '0'])\n\t\t.slice(0, 3)\n\t\t.join('.');\n};\n\n// Numerically compare version strings after normalizing them\nexport const compareVersion = (a: string, b: string): number => {\n\ta = normalizeVersion(a);\n\tb = normalizeVersion(b);\n\treturn a.localeCompare(b, undefined, { numeric: true });\n};\n\n// Apply a comparator (equals, greater-than, etc) by its symbol to a sort comparison\nconst applyComparator = (comparisonResult: number, comparator: Comparator) => {\n\tconst comparators = {\n\t\t'': (r: number) => r === 0,\n\t\t'>': (r: number) => r > 0,\n\t\t'>=': (r: number) => r >= 0,\n\t\t'<': (r: number) => r < 0,\n\t\t'<=': (r: number) => r <= 0\n\t};\n\tconst comparatorFn = comparators[comparator] || comparators[''];\n\treturn comparatorFn(comparisonResult);\n};\n\n/**\n * Check if a version satisfies all given version requirements\n *\n * versionSatisfies('2.1.0', ['>=2', '<4']) // true\n * versionSatisfies('2.1.0', ['5']) // false\n *\n * @param {string} installed Installed version\n * @param {Array.<string>} requirements Array of requirements that must be satisfied\n * @returns boolean\n */\nexport const versionSatisfies = (installed: string, requirements: string[]) => {\n\treturn requirements.every((required) => {\n\t\tconst [, comparator, version] = required.match(/^([\\D]+)?(.*)$/) || [];\n\t\tconst comparisonResult = compareVersion(installed, version);\n\t\treturn applyComparator(comparisonResult, (comparator as Comparator) || '>=');\n\t});\n};\n", "import type Swup from 'swup';\nimport type { Plugin, HookName, HookOptions, HookUnregister, Handler } from 'swup';\nimport { checkDependencyVersion } from './pluginRequirements.js';\n\nfunction isBound(func: Function) {\n\treturn func.name.startsWith('bound ') && !func.hasOwnProperty('prototype');\n}\n\nexport default abstract class SwupPlugin implements Plugin {\n\t/** Name of the plugin */\n\tabstract name: string;\n\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true = true;\n\n\t// Swup instance, assigned by swup itself\n\tswup!: Swup;\n\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]> = {};\n\n\t// List of hook handlers to unregister on unmount\n\tprivate handlersToUnregister: HookUnregister[] = [];\n\n\t/** Run on mount */\n\tmount() {\n\t\t// this is mount method rewritten by class extending\n\t\t// and is executed when swup is enabled with plugin\n\t}\n\n\t/** Run on unmount */\n\tunmount() {\n\t\t// this is unmount method rewritten by class extending\n\t\t// and is executed when swup with plugin is disabled\n\n\t\t// Unsubscribe all registered hook handlers\n\t\tthis.handlersToUnregister.forEach((unregister) => unregister());\n\t\tthis.handlersToUnregister = [];\n\t}\n\n\t_beforeMount(): void {\n\t\tif (!this.name) {\n\t\t\tthrow new Error('You must define a name of plugin when creating a class.');\n\t\t}\n\t}\n\n\t_afterUnmount(): void {\n\t\t// here for any future hidden auto-cleanup\n\t}\n\n\t_checkRequirements(): boolean {\n\t\tif (typeof this.requires !== 'object') {\n\t\t\treturn true;\n\t\t}\n\n\t\tObject.entries(this.requires).forEach(([dependency, versions]) => {\n\t\t\tversions = Array.isArray(versions) ? versions : [versions];\n\t\t\tif (!checkDependencyVersion(dependency, versions, this.swup)) {\n\t\t\t\tconst requirement = `${dependency} ${versions.join(', ')}`;\n\t\t\t\tthrow new Error(`Plugin version mismatch: ${this.name} requires ${requirement}`);\n\t\t\t}\n\t\t});\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t *\n\t * On plugin unmount, the handler will automatically be unregistered.\n\t * The handler function is lexically bound to the plugin instance for convenience.\n\t * @see swup.hooks.on\n\t */\n\tprotected on<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\thandler = !isBound(handler) ? handler.bind(this) : handler;\n\t\tconst unregister = this.swup.hooks.on(hook, handler, options);\n\t\tthis.handlersToUnregister.push(unregister);\n\t\treturn unregister;\n\t}\n\n\tprotected once<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\tprotected before<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\tprotected replace<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\tprotected off<T extends HookName>(hook: T, handler?: Handler<T>): void {\n\t\treturn this.swup.hooks.off(hook, handler!);\n\t}\n}\n", "import type Swup from 'swup';\n\nimport { versionSatisfies } from './versionSatisfies.js';\n\nfunction getInstalledDependencyVersion(dependency: string, swup: Swup): string {\n\tif (dependency === 'swup') {\n\t\treturn swup.version ?? '';\n\t} else {\n\t\t// Circular type dependency?\n\t\t// findPlugin returns swup's Plugin type which is not up-to-date\n\t\t// with the actual Plugin type from index.ts\n\t\tconst plugin = swup.findPlugin(dependency);\n\t\treturn plugin?.version ?? '';\n\t}\n}\n\nexport function checkDependencyVersion(\n\tdependency: string,\n\trequirements: string[],\n\tswup: Swup\n): boolean {\n\tconst version = getInstalledDependencyVersion(dependency, swup);\n\tif (version) {\n\t\treturn versionSatisfies(version, requirements);\n\t} else {\n\t\treturn false;\n\t}\n}\n", "type ElementCollection = { el: Element; index?: number }[];\n\nexport default function mergeHeadContents(\n\tcurrentHead: HTMLHeadElement,\n\tnewHead: HTMLHeadElement,\n\t{ shouldPersist = () => false }: { shouldPersist?: (el: Element) => boolean } = {}\n) {\n\tconst currentTags = Array.from(currentHead.children);\n\tconst newChildren = Array.from(newHead.children);\n\n\tconst addTags = getTagsToAdd(currentTags, newChildren);\n\tconst removeTags = getTagsToRemove(currentTags, newChildren);\n\n\t// Remove tags in reverse to keep indexes, keep persistant elements\n\tremoveTags\n\t\t.reverse()\n\t\t.filter(({ el }) => shouldManageTag(el))\n\t\t.filter(({ el }) => !shouldPersist(el))\n\t\t.forEach(({ el }) => currentHead.removeChild(el));\n\n\t// Insert tag *after* previous version of itself to preserve JS variable scope and CSS cascade\n\taddTags\n\t\t.filter(({ el }) => shouldManageTag(el))\n\t\t.forEach(({ el, index = 0 }) => {\n\t\t\tcurrentHead.insertBefore(el, currentHead.children[index + 1] || null);\n\t\t});\n\n\treturn {\n\t\tremoved: removeTags.map(({ el }) => el),\n\t\tadded: addTags.map(({ el }) => el)\n\t};\n}\n\nfunction getTagsToRemove(currentEls: Element[], newEls: Element[]): ElementCollection {\n\treturn currentEls.reduce((tags, el) => {\n\t\tconst isAmongNew = newEls.some((newEl) => compareTags(el, newEl));\n\t\tif (!isAmongNew) {\n\t\t\ttags.push({ el });\n\t\t}\n\t\treturn tags;\n\t}, [] as ElementCollection);\n}\n\nfunction getTagsToAdd(currentEls: Element[], newEls: Element[]): ElementCollection {\n\treturn newEls.reduce((tags, el, index) => {\n\t\tconst isAmongCurrent = currentEls.some((currentEl) => compareTags(el, currentEl));\n\t\tif (!isAmongCurrent) {\n\t\t\ttags.push({ el, index });\n\t\t}\n\t\treturn tags;\n\t}, [] as ElementCollection);\n}\n\nfunction shouldManageTag(el: Element) {\n\t// Let swup manage the title tag\n\tif (el.localName === 'title') {\n\t\treturn false;\n\t}\n\t// Leave swup theme styles untouched\n\tif (el.matches('[data-swup-theme]')) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction compareTags(oldTag: Element, newTag: Element) {\n\treturn oldTag.outerHTML === newTag.outerHTML;\n}\n", "import waitForStylesheet from './waitForStylesheet.js';\n\nfunction isStylesheet(el: Element): el is HTMLLinkElement {\n\treturn el.matches('link[rel=stylesheet][href]');\n}\n\nexport default function waitForAssets(elements: Element[], timeoutMs: number = 0) {\n\treturn elements.filter(isStylesheet).map((el) => waitForStylesheet(el, timeoutMs));\n}\n", "import { Handler } from 'swup';\nimport Plugin from '@swup/plugin';\n\nimport mergeHeadContents from './mergeHeadContents.js';\nimport updateLangAttribute from './updateLangAttribute.js';\nimport waitForAssets from './waitForAssets.js';\n\ntype Options = {\n\t/** Whether to keep orphaned `link`, `style` and `script` tags from the old page. Default: `false` */\n\tpersistAssets: boolean;\n\t/** Tags that will be persisted when a new page is loaded. Boolean, selector or predicate function. Default: `false` */\n\tpersistTags: boolean | string | ((el: Element) => boolean);\n\t/** Delay the transition to the new page until all newly added assets have finished loading. Default: `false` */\n\tawaitAssets: boolean;\n\t/** How long to wait for assets before continuing anyway. Only applies if `awaitAssets` is enabled. Default: `3000` */\n\ttimeout: number;\n};\n\nexport default class SwupHeadPlugin extends Plugin {\n\tname = 'SwupHeadPlugin';\n\n\trequires = { swup: '>=4' };\n\n\tdefaults: Options = {\n\t\tpersistTags: false,\n\t\tpersistAssets: false,\n\t\tawaitAssets: false,\n\t\ttimeout: 3000\n\t};\n\toptions: Options;\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\tsuper();\n\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\t// persistAssets is a shortcut for: persistTags with a default asset selector for scripts & styles\n\t\tif (this.options.persistAssets && !this.options.persistTags) {\n\t\t\tthis.options.persistTags = 'link[rel=stylesheet], script[src], style';\n\t\t}\n\t}\n\n\tmount() {\n\t\tthis.before('content:replace', this.updateHead);\n\t}\n\n\tupdateHead: Handler<'content:replace'> = async (visit, { page: { html } }) => {\n\t\tconst newDocument = new DOMParser().parseFromString(html, 'text/html');\n\n\t\tconst { removed, added } = mergeHeadContents(document.head, newDocument.head, {\n\t\t\tshouldPersist: (el) => this.isPersistentTag(el)\n\t\t});\n\t\tthis.swup.log(`Removed ${removed.length} / added ${added.length} tags in head`);\n\n\t\tconst lang = updateLangAttribute(document.documentElement, newDocument.documentElement);\n\t\tif (lang) {\n\t\t\tthis.swup.log(`Updated lang attribute: ${lang}`);\n\t\t}\n\n\t\tif (this.options.awaitAssets) {\n\t\t\tconst assetLoadPromises = waitForAssets(added, this.options.timeout);\n\t\t\tif (assetLoadPromises.length) {\n\t\t\t\tthis.swup.log(`Waiting for ${assetLoadPromises.length} assets to load`);\n\t\t\t\tawait Promise.all(assetLoadPromises);\n\t\t\t}\n\t\t}\n\t};\n\n\tisPersistentTag(el: Element) {\n\t\tconst { persistTags } = this.options;\n\t\tif (typeof persistTags === 'function') {\n\t\t\treturn persistTags(el);\n\t\t}\n\t\tif (typeof persistTags === 'string') {\n\t\t\treturn el.matches(persistTags);\n\t\t}\n\t\treturn Boolean(persistTags);\n\t}\n}\n", "export default function updateLangAttribute(\n\tcurrentHtml: HTMLElement,\n\tnewHtml: HTMLElement\n): string | null {\n\tif (currentHtml.lang !== newHtml.lang) {\n\t\tcurrentHtml.lang = newHtml.lang;\n\t\treturn currentHtml.lang;\n\t} else {\n\t\treturn null;\n\t}\n}\n", "export default function waitForStylesheet(element: HTMLLinkElement, timeoutMs: number = 0) {\n\tconst isLoaded = ({ href }: HTMLLinkElement) => {\n\t\treturn Array.from(document.styleSheets)\n\t\t\t.map(({ href }) => href)\n\t\t\t.includes(href);\n\t};\n\n\tconst whenLoaded = (cb: (value?: unknown) => void) => {\n\t\tif (isLoaded(element)) {\n\t\t\tcb();\n\t\t} else {\n\t\t\tsetTimeout(() => whenLoaded(cb), 10);\n\t\t}\n\t};\n\n\treturn new Promise((resolve) => {\n\t\twhenLoaded(resolve);\n\t\tif (timeoutMs > 0) {\n\t\t\tsetTimeout(resolve, timeoutMs);\n\t\t}\n\t});\n}\n"],
  "mappings": "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",
  "names": ["normalizeVersion", "version", "String", "split", "map", "segment", "parseInt", "concat", "slice", "join", "SwupPlugin", "constructor", "this", "isSwupPlugin", "swup", "requires", "handlersToUnregister", "mount", "unmount", "forEach", "unregister", "_beforeMount", "name", "Error", "_afterUnmount", "_checkRequirements", "Object", "entries", "dependency", "versions", "requirements", "_swup$version", "_plugin$version", "plugin", "findPlugin", "versionSatisfies", "installed", "every", "required", "comparator", "match", "compareVersion", "a", "b", "applyComparator", "comparisonResult", "comparators", "r", "localeCompare", "numeric", "Array", "isArray", "requirement", "on", "hook", "handler", "options", "func", "startsWith", "hasOwnProperty", "bind", "hooks", "push", "once", "_extends", "before", "replace", "off", "shouldManageTag", "el", "localName", "matches", "compareTags", "oldTag", "newTag", "outerHTML", "isStylesheet", "SwupHeadPlugin", "Plugin", "constructor", "options", "_this", "super", "this", "name", "requires", "swup", "defaults", "persistTags", "persistAssets", "awaitAssets", "timeout", "updateHead", "async", "visit", "page", "html", "newDocument", "DOMParser", "parseFromString", "removed", "added", "currentHead", "newHead", "shouldPersist", "currentTags", "Array", "from", "children", "newChildren", "addTags", "currentEls", "reduce", "tags", "index", "some", "currentEl", "push", "removeTags", "newEls", "newEl", "reverse", "filter", "forEach", "removeChild", "insertBefore", "map", "document", "head", "isPersistentTag", "log", "length", "lang", "currentHtml", "documentElement", "newHtml", "assetLoadPromises", "elements", "timeoutMs", "element", "whenLoaded", "cb", "isLoaded", "href", "styleSheets", "includes", "setTimeout", "Promise", "resolve", "all", "_extends", "mount", "before", "Boolean"]
}
